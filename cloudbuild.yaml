steps:
  # Print Node.js version (sanity)
  - name: 'node:20-alpine'
    entrypoint: node
    args: ['-v']

  # Build Docker image: prefer secrets injected from Secret Manager (env vars),
  # fall back to substitutions (_VITE_...) if present.
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build'
    entrypoint: bash
    args:
      - -c
      - |
        # Prefer secret-env vars (injected via availableSecrets). If not present,
        # fall back to substitutions provided to the build (_VITE_...)
        SUPABASE_URL="${VITE_SUPABASE_URL:-${_VITE_SUPABASE_URL:-}}"
        SUPABASE_KEY="${VITE_SUPABASE_PUBLISHABLE_KEY:-${_VITE_SUPABASE_PUBLISHABLE_KEY:-}}"

        # If still empty, try to read from .env in repo
        if [[ -z "$SUPABASE_URL" || -z "$SUPABASE_KEY" ]]; then
          if [[ -f .env ]]; then
            SUPABASE_URL=$(grep -E '^VITE_SUPABASE_URL=' .env | head -n1 | cut -d '=' -f2- | tr -d '"\'' | tr -d '\r')
            SUPABASE_KEY=$(grep -E '^VITE_SUPABASE_PUBLISHABLE_KEY=' .env | head -n1 | cut -d '=' -f2- | tr -d '"\'' | tr -d '\r')
          fi
        fi

        if [[ -z "$SUPABASE_URL" || -z "$SUPABASE_KEY" ]]; then
          echo "ERROR: Missing VITE_SUPABASE_URL or VITE_SUPABASE_PUBLISHABLE_KEY.\n\nOptions to fix:\n  - Create secrets in Secret Manager and configure this build to use them (recommended).\n  - Provide substitutions when running the build: --substitutions=_VITE_SUPABASE_URL=...,_VITE_SUPABASE_PUBLISHABLE_KEY=...\n  - Or add a .env file in the repo with the vars (dev only)." >&2
          exit 1
        fi

        echo "Using VITE_SUPABASE_URL=${SUPABASE_URL:0:40}..."

        docker build \
          -f Dockerfile \
          --build-arg VITE_SUPABASE_URL="$SUPABASE_URL" \
          --build-arg VITE_SUPABASE_PUBLISHABLE_KEY="$SUPABASE_KEY" \
          -t "${_REGION}-docker.pkg.dev/$PROJECT_ID/$_AR_REPO/$_IMAGE:$SHORT_SHA" \
          .

  # Push the image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push'
    args:
      - 'push'
      - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_AR_REPO/$_IMAGE:$SHORT_SHA'

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'deploy'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '$_SERVICE_NAME'
      - '--image'
      - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_AR_REPO/$_IMAGE:$SHORT_SHA'
      - '--region'
      - '$_REGION'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8080'
      - '--memory'
      - '512Mi'

images:
  - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_AR_REPO/$_IMAGE:$SHORT_SHA'

timeout: '1800s'

substitutions:
  _SERVICE_NAME: 'riskcare-pacientes-copy'
  _REGION: 'northamerica-south1'
  _AR_REPO: 'docker'
  _IMAGE: 'riskcare-pacientes'
  _VITE_SUPABASE_URL: ''
  _VITE_SUPABASE_PUBLISHABLE_KEY: ''

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/VITE_SUPABASE_URL/versions/latest
      env: VITE_SUPABASE_URL
    - versionName: projects/$PROJECT_ID/secrets/VITE_SUPABASE_PUBLISHABLE_KEY/versions/latest
      env: VITE_SUPABASE_PUBLISHABLE_KEY
